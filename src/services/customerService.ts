import axiosInstance from './apiClient';
import { 
  CreateCustomerDto, 
  UpdateCustomerDto, 
  CustomerApiResponseDto,
  CustomerDto 
} from '../types/customer';

const baseurl = import.meta.env.VITE_API_GATEWAY_URL;

// Get all customers
export const fetchCustomers = async () => {
  const customerUrl = `${baseurl}/Customer`;
  const response = await axiosInstance.get(customerUrl);
  console.log('Fetch customers:', response.data);
  return response.data;
};

// Get customer by ID
export const fetchCustomerById = async (customerId: number) => {
  const response = await axiosInstance.get(`${baseurl}/customers/${customerId}`);
  console.log('Fetch customer by ID:', response.data);
  return response.data;
};

// Create new customer
export const createCustomer = async (customerData: CreateCustomerDto) => {
  const payload = {
    ...customerData,
    //customerId: 0, // Assuming customerId is auto-generated by the backend
  };

  const res = await fetch(`${baseurl}/Customer/Save`, {
    method: 'POST',
    headers: { 'Content-Type': 'application/json' },
    body: JSON.stringify(payload),
    redirect: "manual"
  });
  
  if (!res.ok) throw new Error('Failed to add customer');
  return await res.json();
};

// Update customer
export const updateCustomer = async (customerData: UpdateCustomerDto) => {
  const res = await fetch(`${baseurl}/customers/${customerData.customerId}`, {
    method: 'PUT',
    headers: { 'Content-Type': 'application/json' },
    body: JSON.stringify(customerData),
    redirect: "manual"
  });
  
  if (!res.ok) throw new Error('Failed to update customer');
  return await res.json();
};

// Delete customer
export const deleteCustomer = async (customerId: number) => {
  const res = await fetch(`${baseurl}/customer/${customerId}`, {
    method: 'DELETE',
    headers: { 'Content-Type': 'application/json' },
    redirect: "manual"
  });
  
  if (!res.ok) throw new Error('Failed to delete customer');
  return await res.json();
};

//Delete customer contact
export const deleteCustomerContact = async (contactId: any) => {
  const res = await fetch(`${baseurl}/Customer/contact/${contactId}`, {
    method: 'DELETE',
    headers: { 'Content-Type': 'application/json' },
    redirect: "manual"
  });
  
  if (!res.ok) throw new Error('Failed to delete customer contact');
  return await res.json();
};

//Delete customer banking details
export const deleteCustomerBankingDetails = async (bankingId: any) => {
  const res = await fetch(`${baseurl}/Customer/banking/${bankingId}`, {
    method: 'DELETE',
    headers: { 'Content-Type': 'application/json' },
    redirect: "manual"
  });
  
  if (!res.ok) throw new Error('Failed to delete banking details');
  return await res.json();
};

// Search customers
export const searchCustomers = async (query: string) => {
  const response = await axiosInstance.get(`${baseurl}/customers/search?q=${encodeURIComponent(query)}`);
  console.log('Search customers:', response.data);
  return response.data;
};

// Get customers with pagination
export const fetchCustomersWithPagination = async (page: number = 1, limit: number = 10) => {
  const response = await axiosInstance.get(`${baseurl}/customers?page=${page}&limit=${limit}`);
  console.log('Fetch customers with pagination:', response.data);
  return response.data;
}; 